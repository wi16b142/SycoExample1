//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CrewMemberView.SR_Crew {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MyTask", Namespace="http://schemas.datacontract.org/2004/07/Shared")]
    [System.SerializableAttribute()]
    public partial class MyTask : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PriorityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Duration {
            get {
                return this.DurationField;
            }
            set {
                if ((this.DurationField.Equals(value) != true)) {
                    this.DurationField = value;
                    this.RaisePropertyChanged("Duration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Priority {
            get {
                return this.PriorityField;
            }
            set {
                if ((this.PriorityField.Equals(value) != true)) {
                    this.PriorityField = value;
                    this.RaisePropertyChanged("Priority");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MyType", Namespace="http://schemas.datacontract.org/2004/07/Shared")]
    [System.SerializableAttribute()]
    public partial class MyType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MyCrewMember", Namespace="http://schemas.datacontract.org/2004/07/Shared")]
    [System.SerializableAttribute()]
    public partial class MyCrewMember : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LicenceNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaskDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeDescField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LicenceNumber {
            get {
                return this.LicenceNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.LicenceNumberField, value) != true)) {
                    this.LicenceNumberField = value;
                    this.RaisePropertyChanged("LicenceNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaskDesc {
            get {
                return this.TaskDescField;
            }
            set {
                if ((object.ReferenceEquals(this.TaskDescField, value) != true)) {
                    this.TaskDescField = value;
                    this.RaisePropertyChanged("TaskDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeDesc {
            get {
                return this.TypeDescField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeDescField, value) != true)) {
                    this.TypeDescField = value;
                    this.RaisePropertyChanged("TypeDesc");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SR_Crew.IService_Crew")]
    public interface IService_Crew {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService_Crew/QueryAllTasks", ReplyAction="http://tempuri.org/IService_Crew/QueryAllTasksResponse")]
        CrewMemberView.SR_Crew.MyTask[] QueryAllTasks();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService_Crew/QueryAllTasks", ReplyAction="http://tempuri.org/IService_Crew/QueryAllTasksResponse")]
        System.Threading.Tasks.Task<CrewMemberView.SR_Crew.MyTask[]> QueryAllTasksAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService_Crew/QueryAllTypes", ReplyAction="http://tempuri.org/IService_Crew/QueryAllTypesResponse")]
        CrewMemberView.SR_Crew.MyType[] QueryAllTypes(string task);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService_Crew/QueryAllTypes", ReplyAction="http://tempuri.org/IService_Crew/QueryAllTypesResponse")]
        System.Threading.Tasks.Task<CrewMemberView.SR_Crew.MyType[]> QueryAllTypesAsync(string task);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService_Crew/QueryCrewMembers", ReplyAction="http://tempuri.org/IService_Crew/QueryCrewMembersResponse")]
        CrewMemberView.SR_Crew.MyCrewMember[] QueryCrewMembers(string task, string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService_Crew/QueryCrewMembers", ReplyAction="http://tempuri.org/IService_Crew/QueryCrewMembersResponse")]
        System.Threading.Tasks.Task<CrewMemberView.SR_Crew.MyCrewMember[]> QueryCrewMembersAsync(string task, string type);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService_CrewChannel : CrewMemberView.SR_Crew.IService_Crew, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service_CrewClient : System.ServiceModel.ClientBase<CrewMemberView.SR_Crew.IService_Crew>, CrewMemberView.SR_Crew.IService_Crew {
        
        public Service_CrewClient() {
        }
        
        public Service_CrewClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service_CrewClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service_CrewClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service_CrewClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public CrewMemberView.SR_Crew.MyTask[] QueryAllTasks() {
            return base.Channel.QueryAllTasks();
        }
        
        public System.Threading.Tasks.Task<CrewMemberView.SR_Crew.MyTask[]> QueryAllTasksAsync() {
            return base.Channel.QueryAllTasksAsync();
        }
        
        public CrewMemberView.SR_Crew.MyType[] QueryAllTypes(string task) {
            return base.Channel.QueryAllTypes(task);
        }
        
        public System.Threading.Tasks.Task<CrewMemberView.SR_Crew.MyType[]> QueryAllTypesAsync(string task) {
            return base.Channel.QueryAllTypesAsync(task);
        }
        
        public CrewMemberView.SR_Crew.MyCrewMember[] QueryCrewMembers(string task, string type) {
            return base.Channel.QueryCrewMembers(task, type);
        }
        
        public System.Threading.Tasks.Task<CrewMemberView.SR_Crew.MyCrewMember[]> QueryCrewMembersAsync(string task, string type) {
            return base.Channel.QueryCrewMembersAsync(task, type);
        }
    }
}
